import Encode
import cv2 as cv
import numpy as np

def paint(STRING):
    length = 25
    # 25*25
    Data_bit = Encode.ENCOEDE(STRING)
    #FORMATBITS:010000110000011
    CHANGE ={0:1,1:0}
    BITS =  [[1,1,1,1,1,1,1,0,0,9,9,9,9,9,9,9,9,0,1,1,1,1,1,1,1],
            [1,0,0,0,0,0,1,0,1,9,9,9,9,9,9,9,9,0,1,0,0,0,0,0,1],
            [1,0,1,1,1,0,1,0,0,9,9,9,9,9,9,9,9,0,1,0,1,1,1,0,1],
            [1,0,1,1,1,0,1,0,0,9,9,9,9,9,9,9,9,0,1,0,1,1,1,0,1],
            [1,0,1,1,1,0,1,0,0,9,9,9,9,9,9,9,9,0,1,0,1,1,1,0,1],
            [1,0,0,0,0,0,1,0,0,9,9,9,9,9,9,9,9,0,1,0,0,0,0,0,1],
            [1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1],
            [0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0],
            [1,1,0,0,0,0,1,0,1,9,9,9,9,9,9,9,9,1,1,0,0,0,0,1,0],
            [9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,1,1,1,1,1,9,9,9,9],
            [0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,1,0,0,0,1,9,9,9,9],
            [1,1,1,1,1,1,1,0,0,9,9,9,9,9,9,9,1,0,1,0,1,9,9,9,9],
            [1,0,0,0,0,0,1,0,0,9,9,9,9,9,9,9,1,0,0,0,1,9,9,9,9],
            [1,0,1,1,1,0,1,0,0,9,9,9,9,9,9,9,1,1,1,1,1,9,9,9,9],
            [1,0,1,1,1,0,1,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [1,0,1,1,1,0,1,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [1,0,0,0,0,0,1,0,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],
            [1,1,1,1,1,1,1,0,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9]]
    x = 24
    y = 24
    i=0
    dx = -1
    dy = -1
    pos = 0
    bool = False
    while pos < len(Data_bit):
        if BITS[y][x]==9:
            BITS[y][x] = int(Data_bit[pos])
            if (((x*y) % 2) + ((x*y) % 3)) == 0:
                BITS[y][x] = CHANGE[BITS[y][x]]
            pos += 1    
        i += 1
        if ((y==0)and(x==7))and(bool):
            x = x-2
            dx = -1
            dy = -dy
            bool = False
        elif (((y==0)or(y==(length-1)))and(dx == 1))and(bool):
            dy = -dy
            x = x-1
            dx = -1
            bool = False
        else:
            x += dx
            if i%2 == 0:
                y += dy
                bool = True
            dx = -dx
    for i in range(length):
        print(BITS[i])
        
    img = np.zeros((780, 780, 3),np.uint8)
    img.fill(200)
    for x in range(length):
        for y in range(length):
            if BITS[y][x] == 1:
                for i in range(0,31):
                    for j in range(0,31):
                        img[y*30+i,x*30+j] = [0,0,0]
    cv.namedWindow('QR')
    cv.imshow('QR', img)
    cv.waitKey(0)
    cv.destroyAllWindows()

if __name__=='__main__':
    print('Enter(LETTERS IN UPPERCASE):')
    data = input()
    paint(data)